---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS Cloudwatch Dashboard

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-cloudwatch-dashboard

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-aws-cloudwatch-dashboard.svg"
    url: "https://github.com/clouddrove/terraform-aws-cloudwatch-dashboard/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-cloudwatch-dashboard/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-cloudwatch-dashboard/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "Changelog"
    image: "https://img.shields.io/badge/Changelog-blue"
    url: "CHANGELOG.md"

prerequesties:
  - name: Terraform
    url: https://learn.hashicorp.com/terraform/getting-started/install.html
    version: ">= 1.6.4"

providers:
  - name: aws
    url: https://aws.amazon.com/
    version: ">= 5.1.0"

module_dependencies: 
  - name: Labels Module
    url: https://github.com/clouddrove/terraform-aws-labels
    description: Provides resource tagging.

#  description of this project
description: |-
  Terraform module creates Cloudwatch Dashboard on AWS for monitoriing AWS services.


# How to use this project
# yamllint disable rule:line-length
usage: |-
  Here are  the example of how you can use this module in your inventory structure:
  ### Complete Example
  ```hcl
    locals {
      name        = "dashboard"
      environment = "test"
      region      = "us-east-1"
    }

    ##-----------------------------------------------------------------------------
    ## LAMBDA
    ##-----------------------------------------------------------------------------
    module "lambda" {
      source  = "clouddrove/lambda/aws"
      version = "1.3.1"

      name        = "${local.name}-lambda-function"
      environment = local.environment

      enable                         = true
      timeout                        = 60
      runtime                        = "python3.8"
      handler                        = "index.lambda_handler"
      filename                       = "./test-dashboard-lambda-function.zip"
      layer_filenames                = ["./test-dashboard-lambda-function.zip"]
      names                          = ["python_layer"]
      compatible_runtimes            = [["python3.8"]]
      iam_actions                    = ["logs:CreateLogStream", "logs:CreateLogGroup", "logs:PutLogEvents"]
      statement_ids                  = ["AllowExecutionFromCloudWatch"]
      actions                        = ["lambda:InvokeFunction"]
      principals                     = ["apigateway.amazonaws.com"]
      reserved_concurrent_executions = null
    }

    ##-----------------------------------------------------------------------------
    ## CLOUDWATCH DASHBOARD
    ##-----------------------------------------------------------------------------
    module "cloudwatch_dashboard" {
      source  = "clouddrove/cloudwatch-dashboard/aws"
      version = "1.0.0"	

      enable      = true
      name        = local.name
      environment = local.environment
      dashboard_body = templatefile("${path.module}/lambda_dashboard.json", {
        region               = local.region
        lambda_function_name = split(":", module.lambda.arn)[6]
      })
    }

    output "dashboard_arn" {
      value = module.cloudwatch_dashboard.dashboard_arn
    }  
  ```
  
  ### ECR Dashboard Example
  ```hcl
    locals {
      name        = "dashboard"
      environment = "test"
      region      = "us-east-1"
    }

    ##-----------------------------------------------------------------------------
    ## CLOUDWATCH DASHBOARD
    ##-----------------------------------------------------------------------------
    module "cloudwatch_dashboard" {
      source  = "clouddrove/cloudwatch-dashboard/aws"
      version = "1.0.0"	

      enable      = true
      name        = local.name
      environment = local.environment
      dashboard_body = templatefile("${path.module}/ecr_dashboard.json", {
        region               = local.region
      })
    }
  ```